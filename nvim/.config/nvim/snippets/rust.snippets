# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet ipint "integert" b
    let mut ${1:name} = String::new();
    io::stdin()
		.read_line(&mut ${1:name})
		.expect("this is not valid input");
    let ${1:name}:i32 = ${1:name}
		.trim()
		.parse()
		.expect("this think can not convert into int");
endsnippet

snippet mint "get the multiple int from singel line" b
        let mut ${1:name} = String::new();
        io::stdin().read_line(&mut ${1:name}).expect("this is error");
        let inputs: Vec<i32> = ${1:name}
            .split_whitespace()
            .map(|x| x.parse().expect("Not an int"))
            .collect();
endsnippet
